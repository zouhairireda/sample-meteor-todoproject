meteor create appli
meteor add iron:router / meteor update iron:router
meteor add iron:router@=1.0.13

GENERATE URLs : {{pathFor route='nameOfRoute'}}
Template.temp.helpers({}) / UI.registerHelper('', function(){});

Meteor with MongoDb : new Mongo.Collection("nameOfCollection")
meteor remove package
publications(server) / souscriptions(client) / Meteor(create local collection)
to do some subscription : create waitOn method with Meteor.subscribe("nameOfPublication");
connect to embedded mongodb : meteor mongo
Events : 'click .class' / 'click #id' / 'submit form'

Pour affecter des autorisations sur une action (insert, update...) : ajout de Posts.allow({insert: ...})
Pour effectuer cela cotÃ© serveur, il faut rajouter : Meteor.methods({"name": function}) et depuis le client: Meteor.call("name", doc, callback)

Normally: event => "submit form": function(e) {}
//---------------------------------------------------------------------
Users:
meteor add accounts-base accounts-password
Now : event => "submit form": function(e, template) {}
Accounts.createUser(user, function(err) {}) // persist correct user
Meteor.users (collection of users) // {{currentUser}}
throw new Meteor.Error(numStatus, string);

Router.go(nameOfRoute) //redirection
User validation (server) : Accounts.validateNewUser(function(user) {...})
User Collection => for Accounts
User login => for Meteor
>>>> Meteor.loginWithPassword({username?email:user}, password, callback)
meteor add accounts-ui : for user management in web page

Schema Model Domain : meteor add aldeed:SimpleSchema
Attach schema : collection2
generate forms : autoform